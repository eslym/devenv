name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      php-version:
        required: true
        type: string

jobs:
  build:
    name: Build Image
    strategy:
      matrix:
        platform: [amd64, arm64]
    runs-on: ${{ matrix.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        id: build
        with:
          build-args: |
            PHP_VERSION=${{ inputs.php-version }}
          target: base
          outputs: type=image,name=${{ vars.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ github.sha }}-${{ matrix.platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge digests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.php-version }}
            type=semver,pattern={{version}},value=${{ inputs.php-version }}
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Create and push manifest
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create ${{ steps.versions.meta.tags }} \
            $(printf '${{ vars.IMAGE_NAME }}@sha256:%s ' *)
